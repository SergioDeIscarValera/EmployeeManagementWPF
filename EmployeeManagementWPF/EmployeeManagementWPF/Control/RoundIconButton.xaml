<UserControl x:Class="EmployeeManagementWPF.Control.RoundIconButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EmployeeManagementWPF.Control"
             xmlns:p="clr-namespace:EmployeeManagementWPF.Properties"
             xmlns:micon="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             mc:Ignorable="d" 
             x:Name="root"
             MouseLeftButtonDown="RoundedIconButton_MouseLeftButtonDown"
             d:DesignHeight="50" d:DesignWidth="200">

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="root"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                         To="1.2" Duration="0:0:0.1"/>
                        <DoubleAnimation Storyboard.TargetName="root"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         To="1.2" Duration="0:0:0.1"/>
                        <DoubleAnimation Storyboard.TargetName="root"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                         To="1" BeginTime="0:0:0.1" Duration="0:0:0.1"/>
                        <DoubleAnimation Storyboard.TargetName="root"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                         To="1" BeginTime="0:0:0.1" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </UserControl.Triggers>

    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
    </UserControl.RenderTransform>

    <UserControl.RenderTransformOrigin>
        <Point>0.5, 0.5</Point>
    </UserControl.RenderTransformOrigin>

    <Border VerticalAlignment="Stretch" 
            x:Name="buttonBorder"
            CornerRadius="15"
            Padding="5"
            BorderThickness="0"
            HorizontalAlignment="Stretch">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="True">
                        <Setter Property="Background" Value="{Binding PressColor, ElementName=root}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="False">
                        <Setter Property="Background" Value="{Binding Color, ElementName=root}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <micon:MaterialIcon Kind="{Binding Icon, ElementName=root}" Margin="0,0,10,0">
                <micon:MaterialIcon.Style>
                    <Style TargetType="micon:MaterialIcon">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="True">
                                <Setter Property="Foreground" Value="{Binding Color, ElementName=root}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="False">
                                <Setter Property="Foreground" Value="{Binding PressColor, ElementName=root}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </micon:MaterialIcon.Style>
            </micon:MaterialIcon>

            <RadioButton x:Name="radioButton" Grid.Column="1"
                         Content="{Binding DisplayContent, ElementName=root}"
                         VerticalAlignment="Center" HorizontalAlignment="Left"
                         GroupName="{Binding GroupName, ElementName=root}"
                         IsEnabled="False"
                         Command="{Binding Command, ElementName=root, Mode=TwoWay}"
                         IsChecked="{Binding IsChecked, ElementName=root, Mode=TwoWay}">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="0,0,0,0"/>
                    </ControlTemplate>
                </RadioButton.Template>
                <RadioButton.Style>
                    <Style TargetType="RadioButton">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="True">
                                <Setter Property="Foreground" Value="{Binding Color, ElementName=root}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=root}" Value="False">
                                <Setter Property="Foreground" Value="{Binding PressColor, ElementName=root}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </Grid>
    </Border>
</UserControl>